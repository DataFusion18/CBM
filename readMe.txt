AUTHOR: Kashif Mahmud and Belinda Medlyn
k.mahmud@westernsydney.edu.au
01/10/2016

Carbon Balance Model (CBM)A simple Carbon Balance Model (CBM) for an individual free growing plant seedling (Eucalyptus Tereticornis) for daily time scale:The inputs: GPP, RdThe driver variables (data): Cleaf, Cstem, CrootThe parameters: k, af, as, sf (vary over time on daily time scale)GPP = Gross primary production (Photosynthesis)Rd = Plant daily respiration (gC plant-1 d-1) = calculated based on leaf dark respiration and meteorological data (15 minutes temperature data): Rd * (Cleaf + Cstem + Croot)Rd = Also calculated using modelled gross C gain (Cday_gross) and net C gain (Cday_net) from Court’s data: Rd = Ctotal_gross(GPP) – Ctotal_net(NPP)Cleaf, Cstem, Croot = C pools of leaf, stem and rootk = C fraction going out from storage pool af, as, ar = allocation fraction to foliage, stem and root (ar[i] + af[i] + as[i] = 1)sf = leaf turnover fractionModel equations:The model only considers the instantaneous time frame (t = [i]), not the previous (t = [i-1]) or cumulative (t = [1,2,….,i]) C pool amounts.ΔCstorage = Cstorage[i] - Cstorage[i-1] = GPP[i] - Rd[i]*(Cleaf[i] + Cstem[i] + Croot[i]) - k[i]* ΔCstorage[i])ΔCstorage[i] = GPP[i] - Rd[i]*(Cleaf[i] + Cstem[i] + Croot[i]) / (1 + k[i]) ΔCleaf[i] = af[i] * (1-Y) * k[i] * ΔCstorage[i] - sf[i]*ΔCleaf[i])ΔCleaf[i] = (af[i] * (1-Y) * k[i] * ΔCstorage[i]) / (1 + sf[i])No turnover for either stem and root as these are free growing small seedlings (20 weeks old)ΔCstem[i] = as[i] * (1-Y) * k[i] * ΔCstorage[i]ΔCroot[i] = (1 - af[i] - as[i]) * (1-Y) * k[i] * ΔCstorage[i]ar[i] = 1- af[i] - as[i]Processing the raw data setsData source: Court's data files from the Soil Manipulation testhttps://github.com/kashifmahmud/CBM/Data_filesStep 1: Find different soil volume pots from the data set-Data: Volume designations by plot and pot ("plot_summary.csv")Step 2: Calculate daily leaf count-Data: Weekly measurement of Leaf counts data ("leaf_count_1.csv"), Steps:•	Count total leaf numbers for various soil manipulation tests (Weekly data)•	Interpolate daily leaf counts from the weekly measurements: Perform Cubic Spline interpolation to get daily leaf counts•	Plot interpolated daily leaf counts and save as “Leaf_count_daily.png”Step 3: Calculate leaf area (LA) from harvest data-Data: “harvest aboveground mass.csv”, daily leaf count from step 2•	Leaf area (t) = Leaf area (T) / Leaf count (T) * Leaf count (t); t = time, T = time of harvestStep 4: Comparison between leaf area directly from harvest data (step 3) and considering the SLA changes-Data: “harvest aboveground mass.csv”,•	sla_harvest = leaf_area_harvest / leaf_mass_harvest / (100^2); unit – cm2 to m2•	Calculate leaf area considering the SLA changes o	Modify SLA values considering changes of SLA due to new leaves only•	Plot the differences in SLA results (Measured SLA and Modified SLA)*** NO NEED TO CONSIDER SLA CHANGES TO GET THE LEAF AREA AS PER THE RESULTS AND DISCUSSION WITH BELINDA. THE SLA CHANGES ONLY REPRESENT THE UPPER CANOPY LEAVES (NEW ONES), NOT THE WHOLE CANOPY.Step 5: Calculate leaf mass, Cleaf (leaf carbon pool) directly from harvest data-Data: “harvest aboveground mass.csv”, daily leaf count from step 2•	Leaf mass (t) = Leaf mass (T) * Leaf count (t) / Leaf count (T); t = time, T = time of harvest•	Plot interpolated daily leaf mass using harvest dataStep 6: Analyse stem height and diameter data to estimate stem carbon pool, CstemData: Weekly height diameter data ("height_diameter.csv"; Diameter is in mm; Height is in cm), initial seedling data ("seedling_initial.csv"), harvested seedling data for all different treatments ("seedling_mass.csv")•	Linear regression model fitting log(stem_mass) = b(1) + b(2)*log(dia) + b(3)*log(height)•	Fit the model with initial data (10) and harvested data for free seedlings (7)•	Estimate the stem mass from fitted linear regression equation•	Plot observation vs. modelled data to check the model accuracyStep 7: Calculate daily GPP, NPP, R.plant (Plant respiration)-Data: Daily leaf area (LA) calculated from harvested data (Step 3), modelled daily net C gain in micromole CO2 m-2 d-1 (“cday_120_clean.csv”), modelled daily gross C gain in micromole CO2 m-2 d-1 (“cday_120_clean_gross.csv”), self shading parameters (sigma) calculated from ‘YplantQMC’ package of Remko (“M_leafarea_model.csv"), Total plant mass and leaf area at harvest (“harvest_mass_means.csv”),*** cday_120_clean.csv and cday_120_clean_gross.csv are calculated using coupled photosynthesis – stomatal conductance model with the ‘plantecophys’ package of Remko using mean photosynthetic parameters (Jmax, Vmax, R and g1)•	Generate total plant daily C gain (gross and net) using function: modelledC_func <- function(leafarea, shading, Cday)o	Calculate daily self shading factor, M = b*LA + intercept; Where M is a linear function of leaf area; ‘b’ and ‘intercept’ were calculated from ‘YplantQMC’ for individual soil volume. This factor, M is accomplished by utilizing 61 previoulsy digitized Eucalyptus seedlings, covering 5 total species including E. Tereticornis. o	Calculate gross daily C gain (GPP) with self shading:GPP = Leaf_area * Cday_gross * Mo	Calculate net daily C gain (NPP) with self shading:NPP = Leaf_area * Cday_net * Mo	Unit conversion for both GPP and NPP: From micromole CO2 m-2 d-1 to gDM m-2 d-1 by {* (12/44) / 0.5}; (12/44) is for micromol CO2 to gC; 0.5 is for gC to gDM.•	Determine modelled daily plant respiration, R.plant (to compare with Rd.plant estimated from the leaf respiration, Rleaf measurements):R.plant = GPP - NPP•	Calculate total seedling C gain over experiment (120 days) and compare to final harvest mass C•	Plot both the results (Modelled data and Measurements from harvest) for comparisonStep 8: Rd.plant prediction through time using rdarkq10 equation by volume-Data: Leaf respiration measurements (“rdarkq10.csv") for the parameter rd12.3, which represents leaf dark respiration for various soil manipulation experiments at 12.30C, site weather data (“eucpve_met.csv") for 15 mins temperature measurements•	Calculate Rd.plant through time using rdarkq10 equation: Rd = rd12.3 * q25_drake^((temp-12.3)/10); Unit = micromol CO2 m-2 leaf d-1where q25_drake = 1.86 from John Drake’s experiment on Eucalyptus species, temp = temperatures at 15 mins interval from meteorological data. •	Rd_daily = Rd * sla_harvest; Unit conversion to (micromol CO2 g-1 plant d-1) •	Unit conversion from micromole CO2 g-1 leaf d-1 to gDM g-1 plant d-1 by {* (12/44) / 0.5}; (12/44) is for micromol CO2 to gC; 0.5 is for gC to gDM.•	Rd_daily = Average of all (96) 15mins Rd_daily data over one dayStep 9: Interpolate daily Cstem, Croot-Data: Leaf area calculated from harvested data (step 3), stem mass, Cstem modelled based on stem diameter and height (step 6), root mass, Croot from initial and harvest data ("seedling_initial.csv”, "seedling_mass.csv")•	Interpolate (linear) daily stem mass from weekly modelled data•	Interpolate (linear) daily root mass from initial and harvest data•	Merge daily leaf mass with stem and root mass to get all Carbon pools together in one single data frame C.poolStep 10: Estimate daily Plant respiration, rd.plant from Leaf respiration and temperature (15 mins data)Data: Daily leaf mass, Cleaf calculated directly from harvest data (step 5), •	Sum up all daily Cleaf, Cstem, Croot (step 9) to get the total daily Carbon stock (Ctotal)•	Rd.plant = Rd_daily * (Cleaf + Cstem + Croot); Unit = gDM plant-1 d-1Rd_daily = Daily Plant respiration (gDM g-1 plant d-1)•	Comparison between whole plant respiration, Rd_daily calculated from measured leaf respiration and modelled whole plant respiration, R.plant from GPP and NPP modelled data (step 7).Step 11: Find leaf storage (tnc) for corresponding dates (from Court's Gas Exchange measurement campaign)Data: Gas measurement campaign fortnightly data (“leaf_data.csv”)•	Sum up starch and sugar contents (fortnightly data):tnc = starch_mgperg + sugars_mgperg•	Calculate average fortnightly tnc and standard deviation from 6 replicates•	Unit conversion from (mg g-1leaf) to  (g plant-1) by * leafmass / 1000MCMC Algorithm settingsTo test MCMC with a simple Carbon balance model:Setting lower and upper bounds of the prior parameter pdf, and start point of the chain [lower value, starting value, upper value]:k = [0.1,0.55,1]af = [0,1/7,0.35]as = [0.2,3/7,0.75]sf = [0,1/30,1/10]Generate synthetic data for GPP, Rd, Cstorage with Mean and SD:GPP (with mean=15, sd=3)Rd (with mean=4, sd=0.8)Cstorage (with mean=7.5, sd=2), just to create a measurement sets of Cleaf, Cstem, Croot •	Using random parameter sets within the lower and upper bounds calculate Cleaf, Cstem, Croot to form synthetic data sets and uncertainties associated with these data•	Perform MCMC algorithm with a prior probability distribution for the parameters and a likelihood function •	Defining the model to iteratively calculate Cstorage, Cleaf, Cstem, Croot:function (GPP,Rd,Cleaf.true,Cstem.true,Croot.true,Y,k,af,as,sf)•	Calculating model outputs for the starting point of the chain and then the log likelihood based on measurements of Cleaf, Cstem, Croot•	Store the first parameter set with log likelihood •	Calculate the next candidate parameter vector, as a multivariate normal jump away from the current point•	 Reflected back if the candidate is not within the range to generate another candidate value•	Calculate the prior probability density for the candidate parameter vector•	Calculate the outputs for the candidate parameter vector and log likelihood•	Calculate the logarithm of the Metropolis ratio •	Accept or reject the candidate vector •	Get a representative sample of parameter sets (k1,…..,kn; ….) where n = length of chain¬¬¬•	Calculate final output set from the predicted parameter set and then the cumulative sums over the length of time•	Find the acceptance rate of the chain•	Find the correlation coefficients between original measurements and predictions•	Plot few accepted parameter values over time to find whether the chain converged•	Plot original measurements vs predictions for Cstorage, Cleaf, Cstem, Croot